// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using yurovskaya_backend.Models;

#nullable disable

namespace yurovskaya_backend.Migrations
{
    [DbContext(typeof(DizContext))]
    [Migration("20230528182405_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Dizorder", b =>
                {
                    b.Property<int>("Dizid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("orderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Dizid", "orderId");

                    b.HasIndex("orderId");

                    b.ToTable("Dizorder");
                });

            modelBuilder.Entity("yurovskaya_backend.Models.Diz", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Diz");
                });

            modelBuilder.Entity("yurovskaya_backend.Models.client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Dizid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Dizid");

                    b.ToTable("client");
                });

            modelBuilder.Entity("yurovskaya_backend.Models.order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("client")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("order");
                });

            modelBuilder.Entity("yurovskaya_backend.Models.user", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Dizorder", b =>
                {
                    b.HasOne("yurovskaya_backend.Models.Diz", null)
                        .WithMany()
                        .HasForeignKey("Dizid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yurovskaya_backend.Models.order", null)
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("yurovskaya_backend.Models.client", b =>
                {
                    b.HasOne("yurovskaya_backend.Models.Diz", null)
                        .WithMany("client")
                        .HasForeignKey("Dizid");
                });

            modelBuilder.Entity("yurovskaya_backend.Models.Diz", b =>
                {
                    b.Navigation("client");
                });
#pragma warning restore 612, 618
        }
    }
}
